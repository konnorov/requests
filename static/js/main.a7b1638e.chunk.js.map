{"version":3,"sources":["Elements/Textarea.js","Elements/Swipe.js","Elements/Value.js","Elements/Input.js","Elements/Response.js","Epics/Home.js","Epics/Headers.js","Epics/Content.js","Epics/Params.js","Epics/Other.js","Epics/Connection.js","Interfaces/MiniInterface.js","Desktop/Headers.js","Desktop/Params.js","Desktop/Body.js","Desktop/LeftPanel.js","Desktop/RightPanel.js","Interfaces/Desktop.js","App.js","index.js"],"names":["Textarea","className","txtStyle","style","title","onBlur","value","ref","ignore","props","useState","border","setBorder","platform","usePlatform","input","useRef","update","e","current","scrollHeight","height","useEffect","document","fonts","ready","then","window","addEventListener","position","rows","onFocus","Swipe","children","s","id","swipe","setSwipe","g","x","needUpdate","calc","scrollWidth","offsetWidth","transform","transition","overflowX","onMoveX","res","shiftX","isNaN","onEnd","max","Value","opacity","Input","width","Response","tabs","wrapContent","wrapJson","wrapRaw","error","dangerouslySetInnerHTML","__html","overflowWrap","wordBreak","redirects","map","k","display","alignItems","marginTop","marginRight","flex","readOnly","marginBottom","mode","padding","selected","onClick","length","html","jsonHtml","url","time","code","method","ip","headersHtml","disabled","paddingLeft","paddingRight","after","cursor","checked","onChange","fontSize","whiteSpace","overflow","wordWrap","content","sandbox","srcDoc","body","offsetHeight","fontFamily","rawHtml","align","Home","send","separatorGroup","setClicks","loading","activePanel","default","separator","autoCapitalize","spellCheck","autoCorrect","placeholder","onKeyPress","key","maxHeight","target","replace","stopPropagation","size","before","fontWeight","textTransform","verticalAlign","margin","Headers","headers","left","header","text","onClose","actions","autoclose","action","stretched","push","i","splice","toLowerCase","marginLeft","types","undefined","Content","pl","findIndex","find","h","Number","minHeight","resize","slice","Params","apiurl","require","path","v","httpUrl","match","startsWith","pre","parse","query","split","a","substr","indexOf","b","trim","decodeURIComponent","params","Other","isApp","changeTheme","palette","setPalette","redirect","homeIcon","theme","fav","getRootRef","color","iosCloseItem","toggleRef","selectable","bridge","href","Connection","centered","MiniInterface","sendError","modal","story","popout","toStory","errorIndex","array","index","string","filter","encodeURIComponent","join","parsedUrl","protocol","hostname","port","pathname","hash","activeStory","tabbar","setPath","updatePath","toUpdatePath","first","onBlurUrl","URLSearchParams","entries","toString","newUrl","format","search","newPath","unshift","Math","random","Body","LeftPanel","webTabs","background","RightPanel","Desktop","justifyContent","maxWidth","zIndex","overflowY","AdaptivityApp","withAdaptivity","viewWidth","history","useHistory","location","useLocation","def","setValue","name","prev","useValue","activeModal","scheme","isDesktop","innerWidth","close","appTheme","themes","isStandalone","ViewWidth","SMALL_TABLET","closeOnboarding","checkConnection","navigator","onLine","state","icon","src","textAlign","subscribe","detail","type","data","console","log","result","is_feature_supported","is_added_to_home_screen","keys","get","localStorage","setInterval","status_bar_style","action_bar_color","navigation_bar_color","querySelector","backgroundColor","goBack","checkHeaders","errorHeaders","fetch","JSON","stringify","userAgent","reduce","json","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.a7b1638e.chunk.js","sourcesContent":["import { usePlatform } from '@vkontakte/vkui';\nimport { useRef, useEffect, useState } from 'react';\n\nconst Textarea = ({ className, txtStyle = {}, style = {}, title, onBlur = () => { }, ref, value, ignore, ...props }) => {\n    const [border, setBorder] = useState(false);\n    const platform = usePlatform();\n    const input = useRef(null);\n\n    const update = () => {\n        if (ignore) return;\n        let e = input.current || { style: {}, scrollHeight: '0' };\n\n        e.style.height = 'auto';\n        e.style.height = (e.scrollHeight) + \"px\";\n    }\n\n    useEffect(() => {\n        document.fonts.ready.then(update);\n        window.addEventListener('resize', update);\n\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(update, [value]);\n\n    return (\n        <div className={className} style={{ position: \"relative\", ...style }}>\n            <textarea value={value} className={title ? 'withTitle' : ''} style={{ height: \"auto\", ...txtStyle }} ref={input} rows={1} onFocus={() => setBorder(true)} onBlur={(e) => { setBorder(false); onBlur(e); }} {...props} />\n            <div className={`border border--${platform}`} style={border ? { border: '1px solid var(--accent)' } : {}} />\n            <div className={`txt-bg border--${platform}`} />\n            {title &&\n                <div className={`txtTitle border--${platform}`}>\n                    <div>{title}</div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default Textarea;","import { useState, useRef, useEffect } from 'react';\nimport { Touch } from '@vkontakte/vkui';\n\nconst Swipe = ({ style, children, s, id, ...props }) => {\n    const [swipe, setSwipe] = useState(true);\n    const ref = useRef();\n    const { [`x${id}`]: x = 0, needUpdate } = s.g();\n\n    const calc = () => {\n        if (!ref.current) return 0;\n\n        setSwipe(ref.current.scrollWidth !== ref.current.offsetWidth);\n        return -(ref.current.scrollWidth - ref.current.offsetWidth);\n    }\n\n    useEffect(() => {\n        calc();\n\n        if (needUpdate) s.s('needUpdate', false);\n        else ref.current.style.transform = `translateX(${x}px)`;\n        \n        window.addEventListener('resize', () => {\n            if (!ref.current) return;\n\n            calc();\n            ref.current.style.transition = `transform 0.2s ease 0s`;\n            ref.current.style.transform = `translateX(0px)`;\n            s.s(`x${id}`, 0);\n        });\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <Touch\n            style={{ overflowX: \"hidden\", ...style }}\n            onMoveX={e => {\n                if (!swipe) return;\n\n                let res = x + e.shiftX;\n                res = isNaN(res) ? x : res;\n                ref.current.style.transition = ``;\n                ref.current.style.transform = `translateX(${res}px)`;\n            }}\n\n            onEnd={e => {\n                if (!swipe) return;\n                let res = x + e.shiftX;\n                const max = calc();\n\n                if (res > 0) {\n                    res = 0;\n                } else if (res < max) {\n                    res = max;\n                }\n\n                res = isNaN(res) ? x : res;\n                ref.current.style.transition = `transform 0.2s ease 0s`;\n                ref.current.style.transform = `translateX(${res}px)`;\n                s.s(`x${id}`, res);\n            }}\n        >\n            <div\n                ref={ref}\n                {...props}\n            >\n                {children}\n            </div>\n        </Touch>\n    );\n}\n\nexport default Swipe;","import { usePlatform } from '@vkontakte/vkui';\n\nconst Value = ({ className, txtStyle = {}, style = {}, children, ...props }) => {\n    const platform = usePlatform();\n\n    return (\n        <div className={className} style={{ position: \"relative\", ...style }}>\n            <div className=\"input\" style={txtStyle} {...props}>{children || <div className=\"unselect\" style={{opacity: 0.7}}>Пусто.</div>}</div>\n            <div className={`border border--${platform}`} />\n            <div className={`txt-bg border--${platform}`} />\n        </div>\n    );\n}\n\nexport default Value;","import { useState } from 'react';\nimport { usePlatform } from '@vkontakte/vkui';\n\nconst Input = ({ className, txtStyle = {}, style = {}, onBlur = () => {}, title, ...props }) => {\n    const platform = usePlatform();\n    const [border, setBorder] = useState(false);\n\n    return (\n        <div className={className} style={{ position: \"relative\", width: \"100%\", ...style }}>\n            <input className={title ? 'withTitle' : ''} style={txtStyle} onFocus={() => setBorder(true)} onBlur={(e) => { setBorder(false); onBlur(e); }} {...props} />\n            <div className={`border border--${platform}`} style={border ? { border: '1px solid var(--accent)' } : {}} />\n            <div className={`txt-bg border--${platform}`} />\n            {title && <div className='inputTitle'>{title}</div>}\n        </div>\n    );\n}\n\nexport default Input;","import { Tabs, TabsItem, SimpleCell, Switch } from '@vkontakte/vkui';\nimport { Icon20ArrowUturnLeftOutline, Icon56InfoOutline } from '@vkontakte/icons';\nimport Swipe from './Swipe';\nimport Value from './Value';\nimport Input from './Input';\nimport Textarea from '../Elements/Textarea';\n\nconst Response = ({ s }) => {\n    const { res, tabs, wrapContent = true, wrapJson = false, wrapRaw = false } = s.g();\n\n    return (\n        <>\n            {typeof res === 'object' ?\n                res.error ?\n                    <>\n                        <div className=\"Div\">\n                            <div className=\"title\">Ошибка</div>\n                            <Value>\n                                <div dangerouslySetInnerHTML={{ __html: res.error }} style={{ overflowWrap: 'break-word', wordBreak: 'normal' }} />\n                            </Value>\n                        </div>\n                        <div className=\"Div title\">Редиректы</div>\n                        {res.redirects.map((e, k) =>\n                            <div className=\"Div\" key={k} style={{ display: \"flex\", alignItems: \"center\", ...(k === 0 ? { marginTop: 0 } : {}) }}>\n                                {k !== 0 && <Icon20ArrowUturnLeftOutline style={{ marginRight: \"8px\", transform: \"rotate(180deg)\" }} />}\n                                <Textarea style={{ flex: 1 }} value={e} readOnly />\n                            </div>\n                        )}\n                    </>\n                    :\n                    <>\n                        <Swipe style={{ marginTop: \"12px\", marginBottom: \"12px\" }} s={s} id=\"tabs\">\n                            <Tabs mode=\"buttons\" style={{ padding: 0 }}>\n                                <TabsItem\n                                    selected={tabs === 'res'}\n                                    onClick={() => s.s('tabs', 'res')}\n                                    style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                                >Ответ</TabsItem>\n                                <TabsItem\n                                    selected={tabs === 'content'}\n                                    onClick={() => s.s('tabs', 'content')}\n                                    style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                                >Контент</TabsItem>\n                                {res.redirects.length > 1 && <TabsItem\n                                    selected={tabs === 'redirects'}\n                                    onClick={() => s.s('tabs', 'redirects')}\n                                    style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                                >Редиректы</TabsItem>}\n                                {res.html && <TabsItem\n                                    selected={tabs === 'html'}\n                                    onClick={() => s.s('tabs', 'html')}\n                                    style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                                >HTML</TabsItem>}\n                                {res.jsonHtml && <TabsItem\n                                    selected={tabs === 'json'}\n                                    onClick={() => s.s('tabs', 'json')}\n                                    style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                                >JSON</TabsItem>}\n                                <TabsItem\n                                    selected={tabs === 'raw'}\n                                    onClick={() => s.s('tabs', 'raw')}\n                                    style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                                >RAW</TabsItem>\n                                <div style={{ width: \"12px\", display: \"inline\" }}>&nbsp;</div>\n                            </Tabs>\n                        </Swipe>\n                        {tabs === 'res' ?\n                            <>\n                                <div className=\"Div\" style={{ display: \"flex\" }}>\n                                    <div style={{ flex: 2, marginRight: \"5px\" }}>\n                                        <div className=\"title\">URL</div>\n                                        <Input value={res.url} readOnly />\n                                    </div>\n                                    <div style={{ flex: 1 }}>\n                                        <div className=\"title\">Время</div>\n                                        <Input value={(res.time) + 'мс'} readOnly />\n                                    </div>\n                                </div>\n                                <div className=\"Div\" style={{ display: \"flex\" }}>\n                                    <div style={{ flex: 2, marginRight: \"5px\" }}>\n                                        <div className=\"title\">Код</div>\n                                        <Input value={res.code} readOnly />\n                                    </div>\n                                    <div style={{ flex: 1 }}>\n                                        <div className=\"title\">Метод</div>\n                                        <Input value={res.method} readOnly />\n                                    </div>\n                                </div>\n                                <div className=\"Div\" style={{ flex: 1 }}>\n                                    <div className=\"title\">IP-адрес</div>\n                                    <Input value={res.ip} readOnly />\n                                </div>\n                                <div className=\"Div\">\n                                    <div className=\"title\">Заголовки</div>\n                                    <Value>\n                                        <div dangerouslySetInnerHTML={{ __html: res.headersHtml }} />\n                                    </Value>\n                                </div>\n                            </>\n                            : tabs === 'content' ?\n                                <>\n                                    <SimpleCell\n                                        disabled\n                                        style={{ paddingLeft: \"12px\", paddingRight: \"12px\" }}\n                                        after={<Switch style={{ cursor: \"pointer\" }} checked={wrapContent} onChange={() => s.s('wrapContent', !wrapContent)} />}\n                                    >\n                                        Переносы строк\n                                    </SimpleCell>\n                                    <Value\n                                        className=\"Div\"\n                                        txtStyle={{ fontSize: '11pt', whiteSpace: wrapContent ? 'pre-wrap' : 'pre', overflow: 'auto', wordWrap: 'normal' }}\n                                        style={{ marginTop: 0 }}\n                                    >{res.content}</Value>\n                                </>\n                                : tabs === 'html' ?\n                                    <div className=\"Div\">\n                                        <iframe title=\"HTML\" sandbox=\"allow-forms\" srcDoc={res.html} style={{ height: document.body.offsetHeight - 125 }} />\n                                    </div>\n                                    : tabs === 'json' ?\n                                        <>\n                                            <SimpleCell\n                                                disabled\n                                                style={{ paddingLeft: \"12px\", paddingRight: \"12px\" }}\n                                                after={<Switch style={{ cursor: \"pointer\" }} checked={wrapJson} onChange={() => s.s('wrapJson', !wrapJson)} />}\n                                            >\n                                                Переносы строк\n                                                </SimpleCell>\n                                            <Value\n                                                className=\"Div\"\n                                                txtStyle={{ fontSize: '10.3pt', fontFamily: 'monospace', whiteSpace: wrapJson ? 'pre-wrap' : 'pre', overflow: 'auto', wordWrap: 'normal' }}\n                                                style={{ marginTop: 0 }}\n                                            >\n                                                <div dangerouslySetInnerHTML={{ __html: res.jsonHtml }} />\n                                            </Value>\n                                        </>\n                                        : tabs === 'raw' ?\n                                            <>\n                                                <SimpleCell\n                                                    disabled\n                                                    style={{ paddingLeft: \"12px\", paddingRight: \"12px\" }}\n                                                    after={<Switch style={{ cursor: \"pointer\" }} checked={wrapRaw} onChange={() => s.s('wrapRaw', !wrapRaw)} />}\n                                                >\n                                                    Переносы строк\n                                                    </SimpleCell>\n                                                <Value\n                                                    className=\"Div\"\n                                                    txtStyle={{ fontSize: '10.3pt', fontFamily: 'monospace', whiteSpace: wrapRaw ? 'pre-wrap' : 'nowrap', overflow: 'auto', wordWrap: 'normal' }}\n                                                    style={{ marginTop: 0 }}\n                                                >\n                                                    <div dangerouslySetInnerHTML={{ __html: res.rawHtml }} />\n                                                </Value>\n                                            </>\n                                            : tabs === 'redirects' ?\n                                                <>\n                                                    {res.redirects.map((e, k) =>\n                                                        <div className=\"Div\" key={k} style={{ display: \"flex\", alignItems: \"center\" }}>\n                                                            {k !== 0 && <Icon20ArrowUturnLeftOutline style={{ marginRight: \"8px\", transform: \"rotate(180deg)\" }} />}\n                                                            <Value style={{ flex: 1 }}>{e}</Value>\n                                                        </div>\n                                                    )}\n                                                </>\n                                                : null}\n                    </>\n                :\n                <div className=\"placeholder\" align=\"center\">\n                    <Icon56InfoOutline style={{ marginBottom: \"5px\" }} />\n                    <div>Результат запроса появится<br />здесь после отправки</div>\n                </div>}\n        </>\n    );\n}\n\nexport default Response;","import { useState } from \"react\";\nimport { View, Panel, PanelHeader, Button, Group } from \"@vkontakte/vkui\";\nimport Textarea from '../Elements/Textarea';\nimport Swipe from '../Elements/Swipe';\nimport Response from '../Elements/Response';\n\nimport { Icon24SendOutline } from '@vkontakte/icons';\n\nconst Home = ({ id, send, s, separatorGroup }) => {\n    const [, setClicks] = useState(0);\n    const { loading, url, method } = s.g();\n\n    return (\n        <View id={id} activePanel='home'>\n            <Panel id=\"home\">\n                <PanelHeader onClick={() => {\n                    setClicks(e => {\n                        e++;\n                        if (e === 3) import('../Elements/eruda').then(({ default: eruda }) => { });\n                        return e;\n                    });\n                }}>Requests</PanelHeader>\n\n                <Group separator={separatorGroup ? \"auto\" : \"hide\"}>\n                    <Textarea\n                        autoCapitalize=\"none\"\n                        spellCheck=\"false\"\n                        autoCorrect=\"off\"\n                        className=\"Div\"\n                        placeholder='Ссылка'\n                        value={url}\n                        onKeyPress={e => {\n                            if (e.key === 'Enter') !loading && send();\n                        }}\n                        txtStyle={{ maxHeight: '133px' }}\n                        onChange={e => s.s('url', e.target.value.replace(/\\n/g, ''))}\n                    />\n                    <Swipe className=\"methodList\" s={s} id=\"methods\">\n                        <Button stopPropagation={false} size='m' mode={method === 0 ? 'primary' : 'outline'} onClick={() => s.s('method', 0)}>GET</Button>\n                        <Button stopPropagation={false} size='m' mode={method === 1 ? 'primary' : 'outline'} onClick={() => s.s('method', 1)}>POST</Button>\n                        <Button stopPropagation={false} size='m' mode={method === 2 ? 'primary' : 'outline'} onClick={() => s.s('method', 2)}>PUT</Button>\n                        <Button stopPropagation={false} size='m' mode={method === 3 ? 'primary' : 'outline'} onClick={() => s.s('method', 3)}>PATCH</Button>\n                        <Button stopPropagation={false} size='m' mode={method === 4 ? 'primary' : 'outline'} onClick={() => s.s('method', 4)}>DELETE</Button>\n                        <Button stopPropagation={false} size='m' mode={method === 5 ? 'primary' : 'outline'} onClick={() => s.s('method', 5)}>HEAD</Button>\n                        <Button stopPropagation={false} size='m' mode={method === 6 ? 'primary' : 'outline'} onClick={() => s.s('method', 6)} style={{ marginRight: 0 }}>OPTIONS</Button>\n                    </Swipe>\n                    <div className=\"Div\">\n                        <Button\n                            size=\"m\"\n                            style={{ width: '100%' }}\n                            disabled={!!loading}\n                            className=\"send\"\n                            onClick={send}\n                            before={!loading && <Icon24SendOutline width={22} height={22} />}\n                        >\n                            <div style={{ fontWeight: 800, textTransform: \"uppercase\", verticalAlign: \"-3px\", display: \"inline\" }}>\n                                {loading || \"Отправить\"}\n                            </div>\n                        </Button>\n                    </div>\n                </Group>\n\n                {!separatorGroup && <div className=\"sep\" style={{ margin: \"0 12px\" }} />}\n\n                <Group>\n                    <Response s={s} />\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default Home;","import { Alert, Button, Group, Panel, PanelHeader, View, PanelHeaderButton } from '@vkontakte/vkui';\nimport { Icon56ArticleOutline, Icon24Add, Icon24Delete, Icon28DeleteOutlineAndroid } from '@vkontakte/icons';\nimport Input from '../Elements/Input';\nimport Textarea from '../Elements/Textarea';\n\nconst Headers = ({ id, s }) => {\n    const { headers } = s.g();\n\n    return (\n        <View id={id} activePanel=\"headers\">\n            <Panel id=\"headers\">\n\n                <PanelHeader\n                    left={<PanelHeaderButton disabled={headers.length === 0} onClick={() => s.s('popout',\n                        <Alert\n                            header=\"Удалить ВСЕ заголовки?\"\n                            text=\"Подтвердите действие.\"\n                            onClose={() => s.s('popout', null)}\n                            actions={[\n                                {\n                                    title: \"Отмена\",\n                                    autoclose: true,\n                                    mode: 'cancel'\n                                },\n                                {\n                                    title: \"Удалить\",\n                                    mode: \"destructive\",\n                                    action: () => {\n                                        s.s('headers', []);\n                                        s.s('popout', null);\n                                    }\n                                }\n                            ]}\n                        />\n                    )}><Icon28DeleteOutlineAndroid /></PanelHeaderButton>}\n                >Заголовки</PanelHeader>\n\n                <Group>\n                    <div className=\"Div\">\n                        <Button\n                            before={<Icon24Add />}\n                            size=\"m\"\n                            stretched\n                            onClick={() => s.s('headers', e => {\n                                let headers = [...e];\n                                headers.push(['', '']);\n                                return headers;\n                            })}\n                        >Добавить</Button>\n                    </div>\n                    {headers.length === 0 ?\n                        <div className=\"placeholder\" align=\"center\">\n                            <Icon56ArticleOutline />\n                            <div>Список заголовков пуст</div>\n                        </div>\n                        :\n                        <div>\n                            {headers.map((i, k) => (\n                                <div className=\"Div\" key={k}>\n                                    {k !== 0 && <div className=\"sep\" style={{ margin: \"12px 0\" }} />}\n                                    <div style={{ display: \"flex\", marginBottom: \"5px\", alignItems: \"stretch\" }}>\n                                        <Input className={i[2] ? \"errorInput\" : \"\"} style={{ flex: 1 }} placeholder=\"Заголовок\" value={i[0]} onChange={(e) => s.s('headers', i => {\n                                            let headers = [...i];\n                                            headers[k].splice(2, 1);\n                                            headers[k][0] = e.target.value.toLowerCase().replace(/ /g, '');\n                                            return headers;\n                                        })} />\n                                        <Button onClick={() => s.s('popout',\n                                            <Alert\n                                                header=\"Удалить заголовок?\"\n                                                text=\"Подтвердите действие.\"\n                                                onClose={() => s.s('popout', null)}\n                                                actions={\n                                                    [\n                                                        {\n                                                            title: \"Отмена\",\n                                                            autoclose: true,\n                                                            mode: 'cancel'\n                                                        },\n                                                        {\n                                                            title: \"Удалить\",\n                                                            mode: \"destructive\",\n                                                            action: () => {\n                                                                s.s('headers', i => {\n                                                                    let headers = [...i];\n                                                                    headers.splice(k, 1);\n                                                                    return headers;\n                                                                });\n                                                                s.s('popout', null);\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            />)} size=\"m\" mode=\"destructive\" style={{ marginLeft: \"5px\" }}><Icon24Delete /></Button>\n                                    </div>\n                                    <Textarea placeholder=\"Значение\" value={i[1]} txtStyle={{ maxHeight: '87px' }} onChange={(e) => s.s('headers', i => {\n                                        let headers = [...i];\n                                        headers[k][1] = e.target.value.replace(/\\n/g, '');\n                                        return headers;\n                                    })} />\n                                </div>\n                            ))}\n                        </div>\n                    }\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default Headers;","import { Group, NativeSelect, Panel, PanelHeader, View, PanelHeaderButton, Alert, usePlatform } from \"@vkontakte/vkui\";\nimport Textarea from \"../Elements/Textarea\";\nimport { Icon28DeleteOutlineAndroid } from '@vkontakte/icons';\n\nconst types = [\n    ['application/json', 'JSON [application/json]'],\n    ['application/x-www-form-urlencoded', 'URL Параметры [application/x-www-form-urlencoded]'],\n    ['text/plain', 'Текст [text/plain]'],\n    [undefined, 'Другое [из заголовков]']\n];\n\nconst Content = ({ id, s }) => {\n    const pl = usePlatform();\n    const { headers, body } = s.g();\n\n    return (\n        <View id={id} activePanel='content'>\n            <Panel id=\"content\">\n                <PanelHeader\n                    left={<PanelHeaderButton disabled={!body} onClick={() => s.s('popout',\n                        <Alert\n                            header=\"Очистить весь контент?\"\n                            text=\"Подтвердите действие.\"\n                            onClose={() => s.s('popout', null)}\n                            actions={\n                                [\n                                    {\n                                        title: \"Отмена\",\n                                        autoclose: true,\n                                        mode: 'cancel'\n                                    },\n                                    {\n                                        title: \"Очистить\",\n                                        mode: \"destructive\",\n                                        action: () => {\n                                            s.s('body', '');\n                                            s.s('popout', null);\n                                        }\n                                    }\n                                ]\n                            }\n                        />\n                    )}><Icon28DeleteOutlineAndroid /></PanelHeaderButton>}\n                >Контент</PanelHeader>\n\n                <Group>\n                    {body.length == 81920 &&\n                        <div className={`Div warn border--${pl}`}>\n                            Ограничение контента: 80 Кб = 81920 символов.\n                        </div>\n                    }\n                    <div className=\"Div\">\n                        <div className=\"title\">тип даннных</div>\n                        <NativeSelect\n                            value={types.findIndex(e => {\n                                if (e[0] === undefined) return true;\n\n                                return e[0] === (headers.find(e => e[0] === 'content-type') || [])[1];\n                            })}\n                            onChange={({ target: { value: e } }) => s.s('headers', h => {\n                                if (!types[e]) return h;\n\n                                let headers = [...h];\n                                const i = headers.findIndex(e => e[0] === 'content-type');\n\n                                if (Number(e) === 3) {\n                                    if (i === -1) return h;\n                                    headers.splice(i, 1);\n                                } else if (i === -1) headers.push(['content-type', types[e][0]]);\n                                else headers[i] = ['content-type', types[e][0]];\n\n                                return headers;\n                            })}\n                        >\n                            {types.map((e, key) => (\n                                <option value={key} key={key}>{e[1]}</option>\n                            ))}\n                        </NativeSelect>\n                    </div>\n                    <div className=\"Div\">\n                        <Textarea rows={10} placeholder='Пусто.' txtStyle={{ minHeight: '417px', resize: 'vertical' }} ignore={true} value={body} onChange={({ target: { value: e } }) => s.s('body', e.slice(0, 81920))} />\n                    </div>\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default Content;","import { useEffect } from \"react\";\nimport { Group, Panel, PanelHeader, View, Button, Alert, PanelHeaderButton } from \"@vkontakte/vkui\";\nimport { Icon24Delete, Icon24Add, Icon56SettingsOutline, Icon28DeleteOutlineAndroid } from '@vkontakte/icons';\nimport Input from \"../Elements/Input\";\nimport Textarea from \"../Elements/Textarea\";\n\nconst Params = ({ id, s }) => {\n    const apiurl = require('url');\n    const { path, url, v } = s.g();\n\n    useEffect(() => {\n        const httpUrl = url.match(/^(https?:\\/\\/)/i) || url.startsWith('/') ? url : 'http://' + url;\n        const pre = (apiurl.parse(httpUrl).query || '').split('&');\n        let res = [];\n        for (const i of pre) {\n            const a = i.substr(0, i.indexOf('='));\n            const b = i.substr(i.indexOf('=') + 1);\n            if ((a + b).trim() !== '') res.push([decodeURIComponent(a), decodeURIComponent(b)]);\n        }\n        s.s('path', res);\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <View id={id} activePanel=\"params\">\n            <Panel id=\"params\">\n                <PanelHeader\n                    left={<PanelHeaderButton disabled={!path || path.length === 0} onClick={() => s.s('popout',\n                        <Alert\n                            header=\"Удалить ВСЕ параметры?\"\n                            text=\"Подтвердите действие.\"\n                            onClose={() => s.s('popout', null)}\n                            actions={[\n                                {\n                                    title: \"Отмена\",\n                                    autoclose: true,\n                                    mode: 'cancel'\n                                },\n                                {\n                                    title: \"Удалить\",\n                                    mode: \"destructive\",\n                                    action: () => {\n                                        s.s('path', []);\n                                        s.s('popout', null);\n                                    }\n                                }\n                            ]}\n                        />\n                    )}><Icon28DeleteOutlineAndroid /></PanelHeaderButton>}\n                >URL-параметры</PanelHeader>\n\n                <Group>\n                    {path ?\n                        <div>\n                            <div className=\"Div\">\n                                <Button\n                                    before={<Icon24Add />}\n                                    size=\"m\"\n                                    stretched\n                                    onClick={() => s.s('path', e => {\n                                        let path = [...e];\n                                        path.push(['', '']);\n                                        return path;\n                                    })}\n                                >Добавить</Button>\n                            </div>\n                            {path.length !== 0 ?\n                                <div>\n                                    {path.map((i, k) => (\n                                        <div className=\"Div\" key={k}>\n                                            {k !== 0 && <div className=\"sep\" style={{ margin: \"12px 0\" }} />}\n                                            <div style={{ display: \"flex\", marginBottom: \"5px\", alignItems: \"stretch\" }}>\n                                                <Input style={{ flex: 1 }} placeholder=\"Параметр\" value={i[0]} onChange={({ target: { value: e } }) => s.s('path', i => {\n                                                    let path = [...i];\n                                                    path[k].splice(2, 1);\n                                                    path[k][0] = e;\n                                                    return path;\n                                                })} />\n                                                <Button size=\"m\" mode=\"destructive\" onClick={() => s.s('popout',\n                                                    <Alert\n                                                        header=\"Удалить параметр?\"\n                                                        text=\"Подтвердите действие.\"\n                                                        onClose={() => s.s('popout', null)}\n                                                        actions={\n                                                            [\n                                                                {\n                                                                    title: \"Отмена\",\n                                                                    autoclose: true,\n                                                                    mode: 'cancel'\n                                                                },\n                                                                {\n                                                                    title: \"Удалить\",\n                                                                    mode: \"destructive\",\n                                                                    action: () => {\n                                                                        s.s('path', i => {\n                                                                            let params = [...i];\n                                                                            params.splice(k, 1);\n                                                                            return params;\n                                                                        });\n                                                                        s.s('popout', null);\n                                                                    }\n                                                                }\n                                                            ]\n                                                        }\n                                                    />)} style={{ marginLeft: \"5px\" }}><Icon24Delete /></Button>\n                                            </div>\n                                            <Textarea placeholder=\"Значение\" txtStyle={{ maxHeight: '87px' }} value={i[1]} onChange={({ target: { value: e } }) => s.s('path', i => {\n                                                let path = [...i];\n                                                path[k].splice(2, 1);\n                                                path[k][1] = e;\n                                                return path;\n                                            })} />\n                                        </div>\n                                    ))}\n                                </div>\n                                :\n                                <div className=\"placeholder\" align=\"center\">\n                                    <Icon56SettingsOutline />\n                                    <div>Список URL-параметров пуст</div>\n                                    <code>/?v={v}&#38;message=hello%20world</code>\n                                </div>\n                            }\n                        </div>\n                        :\n                        <div className=\"placeholder\" align=\"center\">\n                            Загрузка...\n                        </div>\n                    }\n                </Group>\n            </Panel>\n        </View>\n    );\n}\n\nexport default Params;","import { useState } from \"react\";\nimport { ActionSheet, Group, Panel, PanelHeader, SimpleCell, Switch, View, ActionSheetItem } from \"@vkontakte/vkui\";\nimport { Icon28PaletteOutline, Icon16Chevron, Icon28HomeOutline, Icon28LinkOutline, Icon28BugOutline, Icon28FavoriteOutline } from '@vkontakte/icons';\nimport bridge from '@vkontakte/vk-bridge';\n\nconst Other = ({ id, s, isApp, changeTheme }) => {\n    const [palette, setPalette] = useState();\n    const { redirect, homeIcon, theme, fav, v } = s.g();\n\n    return (\n        <View id={id} activePanel=\"other\">\n            <Panel id=\"other\">\n                <PanelHeader>Ещё</PanelHeader>\n\n                <Group>\n                    <SimpleCell\n                        getRootRef={setPalette}\n                        style={{ padding: \"0 12px\" }}\n                        before={<Icon28PaletteOutline />}\n                        after={<Icon16Chevron style={{ color: \"var(--icon_secondary)\" }} />}\n                        onClick={() => s.s('popout', \n                            <ActionSheet\n                                onClose={() => s.s('popout', null)}\n                                iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\n                                toggleRef={palette}\n                            >\n                                <ActionSheetItem selectable checked={theme === 'light'} autoclose onClick={() => changeTheme('1')}>\n                                    Светлая\n                                </ActionSheetItem>\n                                <ActionSheetItem selectable checked={theme === 'dark'} autoclose onClick={() => changeTheme('2')}>\n                                    Тёмная\n                                </ActionSheetItem>\n                                {isApp &&\n                                    <ActionSheetItem selectable checked={theme === 'app'} autoclose onClick={() => changeTheme('')}>\n                                        Как в ВК\n                                </ActionSheetItem>}\n                            </ActionSheet>\n                        )}\n                    >Внешний вид</SimpleCell>\n                    <SimpleCell\n                        disabled\n                        style={{ padding: \"0 12px\" }}\n                        before={<Icon28LinkOutline />}\n                        after={\n                            <Switch\n                                style={{ cursor: \"pointer\" }}\n                                checked={redirect}\n                                onChange={() => s.s('redirect', e => !e)}\n                            />}\n                    >Переадресации</SimpleCell>\n                    {homeIcon && <SimpleCell\n                        style={{ padding: \"0 12px\" }}\n                        before={<Icon28HomeOutline />}\n                        onClick={() => bridge.send(\"VKWebAppAddToHomeScreen\")}\n                    >Добавить на главный экран</SimpleCell>}\n                    {fav === '0' && <SimpleCell\n                        style={{ padding: \"0 12px\" }}\n                        before={<Icon28FavoriteOutline />}\n                        onClick={() => bridge.send(\"VKWebAppAddToFavorites\")}\n                    >Добавить сервис в избранные</SimpleCell>}\n                    <SimpleCell\n                        style={{ padding: \"0 12px\" }}\n                        before={<Icon28BugOutline />}\n                        className=\"a\"\n                        target=\"_blank\"\n                        href=\"https://vk.me/club192302489\"\n                    >Сообщить о баге/ошибке</SimpleCell>\n                </Group>\n                <div style={{ opacity: 0.6 }} align=\"center\">Версия {v} Mini</div>\n            </Panel>\n        </View>\n    );\n}\n\nexport default Other;","import { Panel, View, Group } from '@vkontakte/vkui';\nimport { Icon56CancelCircleOutline } from '@vkontakte/icons';\n\nconst Connection = ({ id }) => (\n    <View id={id} activePanel=\"conn\" header={null}>\n        <Panel id=\"conn\" centered>\n            <Group>\n            <div align=\"center\" className=\"placeholder\" style={{ padding: '24px' }}>\n                <Icon56CancelCircleOutline />\n                <b style={{ marginTop: \"5px\" }}>Отсутствует подключение к интернету</b>\n                <div style={{ marginTop: \"5px\", padding: \"0 20px\" }}>Подключитесь к интернету, чтобы воспользоваться сервисом</div>\n            </div>\n            </Group>\n        </Panel>\n    </View>\n);\n\nexport default Connection;","import { Icon28HomeOutline, Icon28GridSquareOutline, Icon28AttachOutline, Icon28AllCategoriesOutline, Icon28LinkCircleOutline } from '@vkontakte/icons';\nimport { Epic, Tabbar, TabbarItem, SplitLayout } from '@vkontakte/vkui';\n\nimport Home from '../Epics/Home';\nimport Headers from '../Epics/Headers';\nimport Content from '../Epics/Content';\nimport Params from '../Epics/Params';\nimport Other from '../Epics/Other';\nimport Connection from '../Epics/Connection';\n\nconst MiniInterface = ({ s, changeTheme, send, isApp, sendError, modal, separatorGroup }) => {\n    const { story, url, path, headers, popout } = s.g();\n    const apiurl = require('url');\n\n    const toStory = e => {\n        switch (story) {\n            case \"headers\":\n                if (e === 'headers') return;\n\n                let h = [...headers];\n                let errorIndex;\n                for (let i = 0; i < headers.length; i++) {\n                    const e = h[i][0];\n                    h[i].splice(2, 1);\n\n                    if (e === '') {\n                        h[i][2] = true;\n                        s.s('headers', h);\n                        return sendError(\"Удалите или переименуйте заголовки без названия, чтобы продолжить.\");\n                    }\n\n                    if (-1 !== (errorIndex =\n                        h.findIndex((array, index) => {\n                            if (index === i) return false;\n                            return array[0] === e;\n                        }))\n                    ) {\n                        h[i][2] = true;\n                        h[errorIndex][2] = true;\n                        s.s('headers', h);\n                        return sendError(<div>Заголовок <b>\"{e}\"</b> повторяется несколько раз. Удалите или переименуйте повторяющиеся заголовки, чтобы продолжить.</div>);\n                    }\n                    s.s('headers', h);\n                }\n                break;\n\n            case \"params\":\n                if (e === 'params') return;\n                else if (!url && path.length === 0) {\n                    s.s('url', '');\n                    break;\n                }\n\n                const string = path.filter(e => e[0] !== '').map(e => e.map(e => encodeURIComponent(e)).join('=')).join('&');\n                const parsedUrl = apiurl.parse(url.trim() === '' ? '/' : url.match(/^(https?:\\/\\/)/i) || url.startsWith('/') ? url : 'http://' + url);\n                s.s('url', `${url.match(/^(https?:\\/\\/)/i) ? parsedUrl.protocol + '//' : ''}${parsedUrl.hostname ? parsedUrl.hostname + (parsedUrl.port ? ':' + parsedUrl.port : '') : \"\"}${parsedUrl.pathname || ''}${string === '' ? '' : '?' + string}${parsedUrl.hash || ''}`);\n                break;\n\n            default:\n                break;\n        }\n        s.s('story', e);\n    }\n\n    return (\n        <SplitLayout\n            popout={popout}\n            modal={modal}\n        >\n            <Epic\n                activeStory={story}\n                tabbar={story !== 'conn' &&\n                    <Tabbar>\n                        <TabbarItem\n                            onClick={() => toStory('home')}\n                            selected={story === 'home'}\n                            text=\"Главная\"\n                        ><Icon28HomeOutline /></TabbarItem>\n                        <TabbarItem\n                            onClick={() => toStory('headers')}\n                            selected={story === 'headers'}\n                            text=\"Заголовки\"\n                        ><Icon28GridSquareOutline /></TabbarItem>\n                        <TabbarItem\n                            onClick={() => toStory('params')}\n                            selected={story === 'params'}\n                            text=\"URL\"\n                        ><Icon28LinkCircleOutline /></TabbarItem>\n                        <TabbarItem\n                            onClick={() => toStory('content')}\n                            selected={story === 'content'}\n                            text=\"Контент\"\n                        ><Icon28AttachOutline /></TabbarItem>\n                        <TabbarItem\n                            onClick={() => toStory('other')}\n                            selected={story === 'other'}\n                            text=\"Еще\"\n                        ><Icon28AllCategoriesOutline /></TabbarItem>\n                    </Tabbar>\n                }\n                popout={popout}\n            >\n                <Home\n                    id=\"home\"\n                    s={s}\n                    send={send}\n                    separatorGroup={separatorGroup}\n                />\n\n                <Headers\n                    id=\"headers\"\n                    s={s}\n                />\n\n                <Content\n                    id=\"content\"\n                    s={s}\n                />\n\n                <Params\n                    id=\"params\"\n                    s={s}\n                />\n\n                <Other\n                    id=\"other\"\n                    isApp={isApp}\n                    changeTheme={changeTheme}\n                    s={s}\n                />\n\n                <Connection\n                    id=\"conn\"\n                />\n            </Epic>\n        </SplitLayout>\n    );\n}\n\nexport default MiniInterface;","import { Button, Alert } from \"@vkontakte/vkui\";\nimport { Icon24AddSquareOutline, Icon56ArticleOutline, Icon24Cancel, Icon20DeleteOutline } from '@vkontakte/icons';\nimport Textarea from '../Elements/Textarea';\nimport Input from '../Elements/Input';\n\nconst Headers = ({ s }) => {\n    const { headers } = s.g();\n\n    return (\n        <>\n            <div className=\"Div\" style={{ display: \"flex\" }}>\n                <Button\n                    before={<Icon24AddSquareOutline width={20} height={20} />}\n                    size=\"m\"\n                    stretched\n                    style={{ marginRight: \"8px\" }}\n                    onClick={() => s.s('headers', e => {\n                        let headers = [...e];\n                        headers.push(['', '']);\n                        return headers;\n                    })}\n                >Добавить</Button>\n                <Button\n                    size=\"m\"\n                    stretched\n                    mode=\"destructive\"\n                    disabled={headers.length === 0}\n                    before={<Icon20DeleteOutline />}\n                    onClick={() => s.s('popout',\n                        <Alert\n                            header=\"Удалить ВСЕ заголовки?\"\n                            text=\"Подтвердите действие.\"\n                            onClose={() => s.s('popout', null)}\n                            actions={[\n                                {\n                                    title: \"Отмена\",\n                                    autoclose: true,\n                                    mode: 'cancel'\n                                },\n                                {\n                                    title: \"Удалить\",\n                                    mode: \"destructive\",\n                                    action: () => {\n                                        s.s('headers', []);\n                                        s.s('popout', null);\n                                    }\n                                }\n                            ]}\n                        />\n                    )}\n                >Очистить всё</Button>\n            </div>\n            {headers.length === 0 ?\n                <div className=\"placeholder\" align=\"center\">\n                    <Icon56ArticleOutline />\n                    <div>Список заголовков пуст</div>\n                </div>\n                :\n                <div>\n                    {headers.map((i, k) => (\n                        <div className=\"Div\" style={k === headers.length - 1 ? { marginBottom: 0 } : {}} key={k}>\n                            <div style={{ display: \"flex\", alignItems: \"stretch\" }}>\n                                <Input className={i[2] ? \"errorInput\" : \"\"} txtStyle={{ padding: '7px 9px', fontSize: '11pt' }} style={{ flex: 1 }} placeholder=\"Заголовок\" value={i[0]} onChange={(e) => s.s('headers', i => {\n                                    let headers = [...i];\n                                    headers[k].splice(2, 1);\n                                    headers[k][0] = e.target.value.toLowerCase().replace(/ /g, '');\n                                    return headers;\n                                })} />\n                                <Input txtStyle={{ padding: '7px 9px', fontSize: '11pt' }} style={{ flex: 1, marginLeft: \"5px\" }} placeholder=\"Значение\" value={i[1]} onChange={(e) => s.s('headers', i => {\n                                    let headers = [...i];\n                                    headers[k][1] = e.target.value.replace(/\\n/g, '');\n                                    return headers;\n                                })} />\n                                <Button onClick={() => s.s('popout',\n                                    <Alert\n                                        header=\"Удалить заголовок?\"\n                                        text=\"Подтвердите действие.\"\n                                        onClose={() => s.s('popout', null)}\n                                        actions={\n                                            [\n                                                {\n                                                    title: \"Отмена\",\n                                                    autoclose: true,\n                                                    mode: 'cancel'\n                                                },\n                                                {\n                                                    title: \"Удалить\",\n                                                    mode: \"destructive\",\n                                                    action: () => {\n                                                        s.s('headers', i => {\n                                                            let headers = [...i];\n                                                            headers.splice(k, 1);\n                                                            return headers;\n                                                        });\n                                                        s.s('popout', null);\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    />)} size=\"m\" mode=\"secondary\" style={{ marginLeft: \"5px\", padding: '0 8px' }}><Icon24Cancel width={16} height={16} /></Button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Headers;","import { useState, useEffect, useRef } from 'react';\nimport { Button, Alert, usePlatform } from \"@vkontakte/vkui\";\nimport { Icon24AddSquareOutline, Icon56SettingsOutline, Icon24Cancel, Icon20DeleteOutline } from '@vkontakte/icons';\nimport Textarea from '../Elements/Textarea';\nimport Input from '../Elements/Input';\n\nconst Params = ({ s }) => {\n    const [path, setPath] = useState([]);\n    const [updatePath, toUpdatePath] = useState();\n    const first = useState(1);\n    const ref = useRef();\n    const pl = usePlatform();\n    \n    const { url, onBlurUrl, v } = s.g();\n    const apiurl = require('url');\n\n    useEffect(() => {\n        if (url === ref.current) return;\n\n        ref.current = url;\n        setPath([...(new URLSearchParams(apiurl.parse(url).query || '').entries())]);\n    }, [onBlurUrl]);\n\n    useEffect(() => {\n        if (first[0]) return first[1](0);\n\n        const string = new URLSearchParams(path.filter(e => e[0] + e[1] !== '')).toString();\n        const newUrl = apiurl.format({ ...(apiurl.parse(url)), search: string ? '?' + string : '' });\n        s.s('url', newUrl);\n        ref.current = newUrl;\n    }, [updatePath]);\n\n    return (\n        <>\n            <div className=\"Div\" style={{ display: \"flex\" }}>\n                <Button\n                    before={<Icon24AddSquareOutline width={20} height={20} />}\n                    size=\"m\"\n                    stretched\n                    style={{ marginRight: \"8px\" }}\n                    onClick={() => {\n                        let newPath = [...path];\n                        newPath.unshift(['', '']);\n                        setPath(newPath);\n                    }}\n                >Добавить</Button>\n                <Button\n                    size=\"m\"\n                    stretched\n                    mode=\"destructive\"\n                    disabled={path.length === 0}\n                    before={<Icon20DeleteOutline />}\n                    onClick={() => s.s('popout',\n                        <Alert\n                            header=\"Удалить ВСЕ заголовки?\"\n                            text=\"Подтвердите действие.\"\n                            onClose={() => s.s('popout', null)}\n                            actions={[\n                                {\n                                    title: \"Отмена\",\n                                    autoclose: true,\n                                    mode: 'cancel'\n                                },\n                                {\n                                    title: \"Удалить\",\n                                    mode: \"destructive\",\n                                    action: () => {\n                                        setPath([]);\n                                        toUpdatePath(Math.random);\n                                        s.s('popout', null);\n                                    }\n                                }\n                            ]}\n                        />\n                    )}\n                >Очистить всё</Button>\n            </div>\n            {path.length === 0 ?\n                <div className=\"placeholder\" align=\"center\">\n                    <Icon56SettingsOutline />\n                    <div>Список URL-параметров пуст</div>\n                    <code>/?v={v}&#38;message=hello+world</code>\n                </div>\n                :\n                <>\n                    {path.map((i, k) => (\n                        <div className=\"Div\" style={k === path.length - 1 ? { marginBottom: 0 } : {}} key={k}>\n                            {k !== 0 && <div className=\"sep\" style={{ margin: \"12px 0\" }} />}\n                            <div style={{ display: \"flex\", marginBottom: \"5px\", alignItems: \"stretch\" }}>\n                                <Input\n                                    onBlur={() => toUpdatePath(Math.random)}\n                                    style={{ flex: 1 }}\n                                    txtStyle={{ padding: '7px 9px', fontSize: '11pt' }}\n                                    placeholder=\"Параметр\"\n                                    value={i[0]}\n                                    onChange={({ target: { value: e } }) => setPath(i => {\n                                        let path = [...i];\n                                        path[k].splice(2, 1);\n                                        path[k][0] = e;\n                                        return path;\n                                    })}\n                                />\n                                {/* <Button\n                                    size=\"m\"\n                                    mode=\"destructive\"\n                                    onClick={() => s.s('popout',\n                                        <Alert\n                                            header=\"Удалить параметр?\"\n                                            text=\"Подтвердите действие.\"\n                                            onClose={() => s.s('popout', null)}\n                                            actions={\n                                                [\n                                                    {\n                                                        title: \"Отмена\",\n                                                        autoclose: true,\n                                                        mode: 'cancel'\n                                                    },\n                                                    {\n                                                        title: \"Удалить\",\n                                                        mode: \"destructive\",\n                                                        action: () => {\n                                                            let newPath = [...path];\n                                                            newPath.splice(k, 1);\n                                                            setPath(newPath);\n                                                            toUpdatePath(Math.random);\n                                                            s.s('popout', null);\n                                                        }\n                                                    }\n                                                ]\n                                            }\n                                        />\n                                    )}\n                                    style={{ marginLeft: \"5px\", padding: '0 8px' }}>\n                                    <Icon24Cancel />\n                                </Button> */}\n                                <button\n                                    className={`deleteButton border--${pl}`}\n                                    onClick={() => s.s('popout',\n                                        <Alert\n                                            header=\"Удалить параметр?\"\n                                            text=\"Подтвердите действие.\"\n                                            onClose={() => s.s('popout', null)}\n                                            actions={\n                                                [\n                                                    {\n                                                        title: \"Отмена\",\n                                                        autoclose: true,\n                                                        mode: 'cancel'\n                                                    },\n                                                    {\n                                                        title: \"Удалить\",\n                                                        mode: \"destructive\",\n                                                        action: () => {\n                                                            let newPath = [...path];\n                                                            newPath.splice(k, 1);\n                                                            setPath(newPath);\n                                                            toUpdatePath(Math.random);\n                                                            s.s('popout', null);\n                                                        }\n                                                    }\n                                                ]\n                                            }\n                                        />\n                                    )}\n                                >\n                                    <Icon24Cancel />\n                                </button>\n                            </div>\n                            <Textarea\n                                onBlur={() => toUpdatePath(Math.random)}\n                                placeholder=\"Значение\"\n                                txtStyle={{ maxHeight: '87px', padding: '7px 9px', fontSize: '11pt' }}\n                                value={i[1]}\n                                onChange={({ target: { value: e } }) => setPath(i => {\n                                    let path = [...i];\n                                    path[k].splice(2, 1);\n                                    path[k][1] = e;\n                                    return path;\n                                })}\n                            />\n                        </div>\n                    ))}\n                </>\n            }\n        </>\n    );\n}\n\nexport default Params;","import { Button, Alert, NativeSelect, usePlatform } from '@vkontakte/vkui';\nimport { Icon20DeleteOutline } from '@vkontakte/icons';\nimport Textarea from '../Elements/Textarea';\n\nconst types = [\n    ['application/json', 'JSON [application/json]'],\n    ['application/x-www-form-urlencoded', 'URL Параметры [application/x-www-form-urlencoded]'],\n    ['text/plain', 'Текст [text/plain]'],\n    [undefined, 'Другое [из заголовков]']\n];\n\nconst Body = ({ s }) => {\n    const pl = usePlatform();\n    const { body, headers } = s.g();\n\n    return (\n        <>\n            <div className=\"Div\">\n                <Button\n                    size=\"m\"\n                    style={{ width: \"100%\" }}\n                    mode=\"destructive\"\n                    disabled={!body}\n                    before={<Icon20DeleteOutline />}\n                    onClick={() => s.s('popout',\n                        <Alert\n                            header=\"Очистить весь контент?\"\n                            text=\"Подтвердите действие.\"\n                            onClose={() => s.s('popout', null)}\n                            actions={\n                                [\n                                    {\n                                        title: \"Отмена\",\n                                        autoclose: true,\n                                        mode: 'cancel'\n                                    },\n                                    {\n                                        title: \"Очистить\",\n                                        mode: \"destructive\",\n                                        action: () => {\n                                            s.s('body', '');\n                                            s.s('popout', null);\n                                        }\n                                    }\n                                ]\n                            }\n                        />\n                    )}\n                >Стереть всё</Button>\n            </div>\n            {body.length == 81920 &&\n                <div className={`Div warn border--${pl}`}>\n                    Ограничение контента: 80 Кб = 81920 символов.\n                </div>\n            }\n            <div className=\"Div\">\n                <div className=\"title\">тип даннных</div>\n                <NativeSelect\n                    value={types.findIndex(e => {\n                        if (e[0] === undefined) return true;\n\n                        return e[0] === (headers.find(e => e[0] === 'content-type') || [])[1];\n                    })}\n                    onChange={({ target: { value: e } }) => s.s('headers', h => {\n                        if (!types[e]) return h;\n\n                        let headers = [...h];\n                        const i = headers.findIndex(e => e[0] === 'content-type');\n\n                        if (Number(e) === 3) {\n                            if (i === -1) return h;\n                            headers.splice(i, 1);\n                        } else if (i === -1) headers.push(['content-type', types[e][0]]);\n                        else headers[i] = ['content-type', types[e][0]];\n\n                        return headers;\n                    })}\n                >\n                    {types.map((e, key) => (\n                        <option value={key} key={key}>{e[1]}</option>\n                    ))}\n                </NativeSelect>\n            </div>\n            <div className=\"Div\" style={{ marginBottom: 0 }}>\n                <Textarea rows={10} placeholder='Пусто.' txtStyle={{ minHeight: '417px', resize: 'vertical' }} ignore={true} value={body} onChange={({ target: { value: e } }) => s.s('body', e.slice(0, 81920))} />\n            </div>\n        </>\n    );\n}\n\nexport default Body;","import { Group, Panel, TabsItem, Button, NativeSelect, Tabs, PanelHeader } from \"@vkontakte/vkui\";\nimport { Icon24SendOutline, Icon20GearOutline } from '@vkontakte/icons';\n\nimport Textarea from '../Elements/Textarea';\nimport Swipe from '../Elements/Swipe';\nimport Headers from './Headers';\nimport Params from './Params';\nimport Body from './Body';\n\nconst LeftPanel = ({ s, send }) => {\n    const { url, loading, method, webTabs } = s.g();\n\n    return (\n        <Panel>\n            <PanelHeader />\n            <Group>\n                <Textarea\n                    autoCapitalize=\"none\"\n                    spellCheck=\"false\"\n                    autoCorrect=\"off\"\n                    className=\"Div\"\n                    placeholder='Ссылка'\n                    value={url}\n                    onKeyPress={e => {\n                        if (e.code === 'Enter') !loading && send();\n                    }}\n                    txtStyle={{ maxHeight: '133px' }}\n                    onChange={e => s.s('url', e.target.value.replace(/\\n/g, ''))}\n                    onBlur={() => s.s('onBlurUrl', Math.random)}\n                />\n                <div className=\"Div\" style={{ display: \"flex\" }}>\n                    <Button\n                        size=\"m\"\n                        style={{ flex: 1, marginRight: '8px' }}\n                        disabled={!!loading}\n                        className=\"send\"\n                        onClick={send}\n                        stretched\n                        before={!loading && <Icon24SendOutline width={22} height={22} />}\n                    >\n                        <div style={{ fontWeight: 800, textTransform: \"uppercase\", verticalAlign: \"-3px\", display: \"inline\" }}>\n                            {loading || \"Отправить\"}\n                        </div>\n                    </Button>\n                    <NativeSelect style={{width: '112px'}} value={method} onChange={({ target: { value: e } }) => s.s('method', Number(e))}>\n                        <option value={0}>GET</option>\n                        <option value={1}>POST</option>\n                        <option value={2}>PUT</option>\n                        <option value={3}>PATCH</option>\n                        <option value={4}>DELETE</option>\n                        <option value={5}>HEAD</option>\n                        <option value={6}>OPTIONS</option>\n                    </NativeSelect>\n                </div>\n            </Group>\n            <Group>\n                <Swipe style={{ marginTop: \"12px\", marginBottom: \"12px\" }} s={s} id=\"webTabs\">\n                    <Tabs mode=\"buttons\" style={{ padding: 0 }}>\n                        <TabsItem\n                            onClick={() => s.s('activeModal', 'settings')}\n                            style={{ background: 'var(--button_primary_background)', color: \"var(--button_primary_foreground)\", padding: '0 8px' }}\n                        ><Icon20GearOutline /></TabsItem>\n                        <TabsItem\n                            selected={webTabs === 'url'}\n                            onClick={() => s.s('webTabs', 'url')}\n                            style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                        >URL</TabsItem>\n                        <TabsItem\n                            selected={webTabs === 'headers'}\n                            onClick={() => s.s('webTabs', 'headers')}\n                            style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                        >Заголовки</TabsItem>\n                        <TabsItem\n                            selected={webTabs === 'body'}\n                            onClick={() => s.s('webTabs', 'body')}\n                            style={{ border: '1px solid var(--panel_tab_active_background)' }}\n                        >Контент</TabsItem>\n                    </Tabs>\n                    {webTabs === 'headers' ?\n                        <Headers s={s} />\n                        : webTabs === 'url' ?\n                            <Params s={s} />\n                            : webTabs === 'body' ?\n                                <Body s={s} />\n                                : null}\n                </Swipe>\n            </Group>\n        </Panel>\n    );\n}\n\nexport default LeftPanel;","import { Group, Panel, PanelHeader } from \"@vkontakte/vkui\";\nimport Response from '../Elements/Response';\n\nconst RightPanel = ({ s }) => {\n    return (\n        <Panel>\n            <PanelHeader />\n            <Group>\n                <Response s={s} />\n            </Group>\n        </Panel>\n    );\n}\n\nexport default RightPanel;","import { PanelHeader, SplitCol, SplitLayout } from '@vkontakte/vkui';\n\nimport LeftPanel from '../Desktop/LeftPanel';\nimport RightPanel from '../Desktop/RightPanel';\n\nconst Desktop = ({ s, send, modal }) => {\n    const { popout } = s.g();\n\n    return (\n        <SplitLayout\n            modal={modal}\n            popout={popout}\n            style={{ justifyContent: \"center\", maxWidth: '1400px', marginLeft: 'auto', marginRight: 'auto' }}\n            header={\n                <PanelHeader\n                    style={{ zIndex: 15 }}\n                    separator={false}\n                >Requests</PanelHeader>}\n        >\n            <SplitCol style={{ flex: 1, margin: '0 6px 0px 12px', overflowY: \"auto\" }}>\n                <LeftPanel s={s} send={send} />\n            </SplitCol>\n            <SplitCol style={{ flex: 1, margin: '0 12px 0 6px', overflowY: \"auto\" }}>\n                <RightPanel s={s} />\n            </SplitCol>\n        </SplitLayout>\n    );\n}\n\nexport default Desktop;","import { useEffect, useState } from 'react';\nimport { withAdaptivity, ViewWidth, AdaptivityProvider, AppRoot, ConfigProvider, ScreenSpinner, Alert, ModalRoot, ModalCard, Button, Avatar, ModalPage, ModalPageHeader, SimpleCell, ActionSheet, ActionSheetItem, Switch } from '@vkontakte/vkui';\nimport bridge from '@vkontakte/vk-bridge';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './style.css';\nimport { Icon56SettingsOutline, Icon28BugOutline, Icon28PaletteOutline, Icon16Chevron, Icon28LinkOutline, Icon28HomeOutline, Icon28FavoriteOutline } from '@vkontakte/icons';\n\nimport MiniInterface from './Interfaces/MiniInterface';\nimport Desktop from './Interfaces/Desktop';\n\nconst useValue = (def = {}) => {\n    const [v, setValue] = useState(def);\n\n    const s = (name, value) => setValue(prev => ({\n        ...prev,\n        [name]: typeof value === 'function' ? value(prev[name]) : value\n    }));\n\n    const g = (name) => name ? v[name] : v;\n\n    return { s, g };\n}\n\nconst App = ({ viewWidth }) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const s = useValue({\n        url: \"\",\n        method: 0,\n        body: '',\n        redirect: true,\n        headers: [],\n        popout: null,\n        tabs: \"res\",\n        activeModal: null,\n        story: 'home',\n        fav: false,\n        homeIcon: false,\n        scheme: 'bright_light',\n        theme: \"light\",\n        isDesktop: window.innerWidth >= 999,\n        webTabs: \"url\",\n        close: true,\n        v: '1.2.1'\n    });\n    const { popout, scheme, url, headers, body, redirect, method, theme, appTheme, activeModal, isDesktop, palette, fav, homeIcon, close, v } = s.g();\n\n    const themes = ['app', 'light', 'dark'];\n    const isApp = !bridge.isStandalone() && !isDesktop;\n    const separatorGroup = viewWidth >= ViewWidth.SMALL_TABLET;\n\n    const closeOnboarding = () => {\n        s.s('activeModal', null);\n        bridge.send('VKWebAppStorageSet', { key: \"onboarding\", value: 'ok' });\n    }\n\n    const checkConnection = () => s.s('story', e => navigator.onLine ? e === 'conn' ? 'home' : e : \"conn\");\n\n    const modal = (\n        <ModalRoot activeModal={(location.state && location.state.modal) ? activeModal : null} onClose={closeOnboarding}>\n            <ModalCard\n                id=\"onboarding1\"\n                header=\"Добро пожаловать!\"\n                icon={<Avatar mode=\"app\" src='/requests/icons/icon150.png' size={72} />}\n                onClose={closeOnboarding}\n                actions={<Button size=\"m\" onClick={() => s.s('activeModal', 'onboarding2')}>Дальше</Button>}\n            >\n                <div style={{ marginTop: '5px', opacity: 0.7, textAlign: \"center\" }}>Отправляйте HTTP, REST и SOAP запросы легко и не открывая консоль.</div>\n            </ModalCard>\n\n            <ModalCard\n                id=\"onboarding2\"\n                icon={<Icon56SettingsOutline />}\n                onClose={closeOnboarding}\n                actions={<Button size=\"m\" onClick={() => {\n                    bridge.send(\"VKWebAppAddToFavorites\");\n                    closeOnboarding();\n                }}>Дальше</Button>}\n                header=\"Меняйте заголовки, контент и параметры запроса\"\n            >\n                <div style={{ marginTop: '5px', opacity: 0.7, textAlign: \"center\" }}>Всё нужное на панели {isDesktop ? 'слева' : \"снизу\"}.</div>\n            </ModalCard>\n\n            <ModalPage\n                id=\"settings\"\n                onClose={() => s.s('activeModal', null)}\n                header={<ModalPageHeader>Настройки</ModalPageHeader>}\n            >\n                <SimpleCell\n                    getRootRef={(e) => s.s('palette', e)}\n                    style={{ padding: \"0 16px\" }}\n                    before={<Icon28PaletteOutline />}\n                    after={<Icon16Chevron style={{ color: \"var(--icon_secondary)\" }} />}\n                    onClick={() => s.s('popout',\n                        <ActionSheet\n                            onClose={() => s.s('popout', null)}\n                            iosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\n                            toggleRef={palette}\n                        >\n                            <ActionSheetItem selectable checked={theme === 'light'} autoclose onClick={() => changeTheme('1')}>\n                                Светлая\n                            </ActionSheetItem>\n                            <ActionSheetItem selectable checked={theme === 'dark'} autoclose onClick={() => changeTheme('2')}>\n                                Тёмная\n                                </ActionSheetItem>\n                            {isApp &&\n                                <ActionSheetItem selectable checked={theme === 'app'} autoclose onClick={() => changeTheme('')}>\n                                    Как в ВК\n                                </ActionSheetItem>}\n                        </ActionSheet>\n                    )}\n                >Внешний вид</SimpleCell>\n                <SimpleCell\n                    disabled\n                    style={{ padding: \"0 16px\" }}\n                    before={<Icon28LinkOutline />}\n                    after={\n                        <Switch\n                            style={{ cursor: \"pointer\" }}\n                            checked={redirect}\n                            onChange={() => s.s('redirect', e => !e)}\n                        />}\n                >Переадресации</SimpleCell>\n                {homeIcon && <SimpleCell\n                    style={{ padding: \"0 16px\" }}\n                    before={<Icon28HomeOutline />}\n                    onClick={() => bridge.send(\"VKWebAppAddToHomeScreen\")}\n                >Добавить на главный экран</SimpleCell>}\n                {fav === '0' && <SimpleCell\n                    style={{ padding: \"0 16px\" }}\n                    before={<Icon28FavoriteOutline />}\n                    onClick={() => bridge.send(\"VKWebAppAddToFavorites\")}\n                >Добавить сервис в избранные</SimpleCell>}\n                <SimpleCell\n                    style={{ padding: \"0 16px\" }}\n                    before={<Icon28BugOutline />}\n                    className=\"a\"\n                    target=\"_blank\"\n                    href=\"https://vk.me/club192302489\"\n                >Сообщить о баге/ошибке</SimpleCell>\n                <div style={{ opacity: 0.6, padding: '4px 0 12px 0' }} align=\"center\">Версия {v} {isDesktop ? 'Desktop' : \"Mini\"}</div>\n            </ModalPage>\n        </ModalRoot >\n    );\n\n    useEffect(() => {\n        history.replace('/' + window.location.search);\n        s.s('close');\n\n        bridge.subscribe(({ detail: { type, data } }) => {\n            if (data === undefined) return;\n            console.log(type, data);\n\n            switch (type) {\n                case 'VKWebAppUpdateConfig':\n                    s.s('appTheme', data.scheme);\n                    break;\n\n                case 'VKWebAppAddToFavoritesResult':\n                    s.s('fav', data.result);\n                    break;\n\n                case 'VKWebAppAddToHomeScreenResult':\n                    s.s('homeIcon', false);\n                    break;\n\n                default:\n                    break;\n            }\n\n        });\n\n        window.addEventListener('resize', () => {\n            s.s('isDesktop', window.innerWidth >= 999);\n            s.s('needUpdate', true);\n        });\n\n        bridge.send(\"VKWebAppAddToHomeScreenInfo\")\n            .then(e => s.s('homeIcon', e.is_feature_supported && !e.is_added_to_home_screen));\n\n        bridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"onboarding\"] })\n            .then(e => e.keys[0].value !== 'ok' && s.s('activeModal', 'onboarding1'));\n\n        const fav = new URLSearchParams(window.location.search).get('vk_is_favorite');\n        s.s('fav', fav);\n\n        if (isApp) {\n            bridge.send(\"VKWebAppStorageGet\", { \"keys\": [\"theme\"] })\n                .then(e => s.s('theme', themes[e.keys[0].value] || 'app'));\n        } else s.s('theme', themes[localStorage.theme] || 'light');\n\n        console.log(`- vk mini app?\\n- ${isApp ? 'yes' : 'no'}!`);\n\n        checkConnection();\n        setInterval(checkConnection, 1000);\n        bridge.send('VKWebAppInit');\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        let scheme;\n\n        switch (theme) {\n            case 'dark':\n                scheme = \"space_gray\";\n                break;\n\n            case 'light':\n                scheme = \"bright_light\";\n                break;\n\n            default:\n                scheme = appTheme || \"bright_light\";\n                break;\n        }\n\n        console.log('theme:', scheme);\n        s.s('scheme', scheme);\n        bridge.send(\"VKWebAppSetViewSettings\",\n            scheme === 'bright_light' ?\n                {\n                    status_bar_style: \"dark\",\n                    action_bar_color: \"#ffffff\",\n                    navigation_bar_color: '#ffffff'\n                } : {\n                    status_bar_style: \"light\",\n                    action_bar_color: \"#19191a\",\n                    navigation_bar_color: \"#000000\"\n                }\n        );\n\n        const html = document.querySelector('html');\n        html.style.backgroundColor =\n            separatorGroup ?\n                scheme === 'bright_light' ? '#ebedf0' : '#0a0a0a'\n                :\n                scheme === 'bright_light' ? '#ffffff' : '#19191a';\n        // eslint-disable-next-line \n    }, [appTheme, theme, separatorGroup]);\n\n    useEffect(() => {\n        if (popout && !popout.props.size && !(location.state && location.state.popout)) history.push('', { popout: 1, modal: location.state && location.state.modal });\n        else if (!popout && (location.state && location.state.popout)) history.goBack();\n        // eslint-disable-next-line\n    }, [popout]);\n\n    useEffect(() => {\n        if (activeModal && !(location.state && location.state.modal)) history.push('', { modal: 1, popout: location.state && location.state.popout });\n        else if (!activeModal && (location.state && location.state.modal)) history.goBack();\n        // eslint-disable-next-line\n    }, [activeModal]);\n\n    useEffect(() => {\n        if (close) return;\n\n        if (!popout && (location.state && location.state.popout)) history.goBack();\n        else if (popout && !(location.state && location.state.popout)) popout.props.onClose();\n\n        if (!activeModal && (location.state && location.state.modal)) history.goBack();\n        else if (activeModal && !(location.state && location.state.modal)) modal.props.children.find(e => e.props.id === activeModal).props.onClose();\n    }, [location]);\n\n    const sendError = e => s.s('popout',\n        <Alert\n            header=\"Произошла ошибка\"\n            text={<div style={{ wordWrap: 'break-word' }}>{e}</div>}\n            onClose={() => s.s('popout', null)}\n            actions={[{\n                title: \"Закрыть\",\n                autoclose: true,\n                mode: \"cancel\"\n            }]}\n        />\n    );\n\n    const checkHeaders = () => {\n        let h = [...headers];\n        let errorIndex;\n        for (let i = 0; i < headers.length; i++) {\n            const e = h[i][0];\n            h[i].splice(2, 1);\n\n            if (e === '') {\n                h[i][2] = true;\n                return \"Удалите или переименуйте заголовки без названия, чтобы продолжить.\";\n            }\n\n            if (-1 !== (errorIndex =\n                h.findIndex((array, index) => {\n                    if (index === i) return false;\n                    return array[0] === e;\n                }))\n            ) {\n                h[i][2] = true;\n                h[errorIndex][2] = true;\n                return <div>Заголовок <b>\"{e}\"</b> повторяется несколько раз. Удалите или переименуйте повторяющиеся заголовки, чтобы продолжить.</div>;\n            }\n        }\n        return 1;\n    }\n\n    const send = async () => {\n        if (url.trim() === '') return sendError('Введите ссылку.');\n        else if (method === 5 && body) {\n            s.s('webTabs', 'body');\n            return sendError('Нельзя прикрепить контент к HEAD-запросу.');\n        }\n        s.s('loading', 'Загрузка...');\n        s.s('popout', <ScreenSpinner />);\n\n        const errorHeaders = checkHeaders();\n        if (errorHeaders !== 1) {\n            s.s('loading');\n            s.s('webTabs', 'headers');\n            return sendError(errorHeaders);\n        }\n\n        s.s('res');\n        s.s('tabs');\n        s.s('xmethods');\n        let json;\n        try {\n            const res = await fetch('https://req.knnrv.ru/v2/send', {\n                method: \"POST\",\n                body: JSON.stringify({\n                    url: url,\n                    method: method,\n                    redirect: redirect,\n                    headers: {\n                        \"user-agent\": window.navigator.userAgent,\n                        ...(headers.reduce((e, k) => {\n                            e[k[0]] = k[1];\n                            return e;\n                        }, {}))\n                    },\n                    body: body\n                }),\n                headers: {\n                    \"content-type\": \"application/json\",\n                    'vk-auth': window.location.search\n                }\n            });\n            json = await res.json();\n        } catch (e) {\n            s.s('loading');\n            return sendError(`Ошибка при отправке запроса на сервер. Попробуйте позже 😳`);\n        }\n\n        if (json.error) {\n            bridge.send(\"VKWebAppTapticNotificationOccurred\", { \"type\": \"warning\" });\n            if (json.redirects && json.redirects.length > 1) {\n                s.s('res', json);\n                s.s('popout', null);\n            }\n            else sendError(<div dangerouslySetInnerHTML={{ __html: json.error }} />);\n        }\n        else {\n            s.s('res', json);\n            if (json.jsonHtml) s.s('tabs', 'json');\n            else s.s('tabs', 'content');\n            bridge.send(\"VKWebAppTapticNotificationOccurred\", { \"type\": \"success\" });\n            s.s('popout', null);\n        }\n\n        s.s('loading');\n    }\n\n    const changeTheme = (e) => {\n        s.s('theme', themes[e] || 'app');\n        if (isApp) bridge.send('VKWebAppStorageSet', { key: \"theme\", value: e });\n        else localStorage.theme = e;\n    }\n\n    return (\n        <ConfigProvider scheme={scheme} platform={isDesktop ? \"ios\" : undefined}>\n            <AppRoot>\n                {isDesktop ?\n                    <Desktop s={s} send={send} modal={modal} />\n                    :\n                    <MiniInterface s={s} send={send} changeTheme={changeTheme} isApp={isApp} sendError={sendError} separatorGroup={separatorGroup} modal={modal} />\n                }\n            </AppRoot>\n        </ConfigProvider>\n    );\n}\n\nconst AdaptivityApp = withAdaptivity(App, { viewWidth: true });\n\n// eslint-disable-next-line\nexport default () => (\n    <AdaptivityProvider>\n        <AdaptivityApp />\n    </AdaptivityProvider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/requests/\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}